# generated by datamodel-codegen:
#   filename:  markets.json
#   timestamp: 2025-02-16T19:07:33+00:00

from __future__ import annotations

from enum import Enum
from typing import Optional

from pydantic import BaseModel, ConfigDict, RootModel, confloat


class Sort(Enum):
    created_time = "created-time"
    updated_time = "updated-time"
    last_bet_time = "last-bet-time"
    last_comment_time = "last-comment-time"


class Order(Enum):
    asc = "asc"
    desc = "desc"


class Markets(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    limit: Optional[confloat(ge=0.0, le=1000.0)] = 500
    sort: Optional[Sort] = None
    order: Optional[Order] = None
    before: Optional[str] = None
    userId: Optional[str] = None
    groupId: Optional[str] = None


class Model(RootModel[Markets]):
    root: Markets
