# generated by datamodel-codegen:
#   filename:  bets.json
#   timestamp: 2025-02-16T19:07:30+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional, Union

from pydantic import BaseModel, ConfigDict, RootModel, confloat


class Order(Enum):
    asc = "asc"
    desc = "desc"


class Kinds(Enum):
    open_limit = "open-limit"


class FilterRedemptions(RootModel[Union[bool, str]]):
    root: Union[bool, str]


class Bets(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    id: Optional[str] = None
    userId: Optional[str] = None
    username: Optional[str] = None
    contractId: Optional[Union[str, List[str]]] = None
    contractSlug: Optional[str] = None
    answerId: Optional[str] = None
    limit: Optional[confloat(ge=0.0, le=50000.0)] = 10000
    before: Optional[str] = None
    after: Optional[str] = None
    beforeTime: Optional[float] = None
    afterTime: Optional[float] = None
    order: Optional[Order] = None
    kinds: Optional[Kinds] = None
    filterRedemptions: Optional[Union[bool, str]] = None
    includeZeroShareRedemptions: Optional[FilterRedemptions] = None
    commentRepliesOnly: Optional[FilterRedemptions] = None
    count: Optional[FilterRedemptions] = None
    points: Optional[FilterRedemptions] = None


class Model(RootModel[Bets]):
    root: Bets
